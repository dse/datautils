#!/usr/bin/env perl
use warnings;
use strict;
use open OUT => ':locale';
use feature 'say';

use JSON;

my $json = JSON->new()->pretty(1)->canonical(1)->ascii(1);

if (scalar @ARGV < 2) {
    die("not enough arguments\n");
}

my @obj;

foreach my $arg (@ARGV) {
    warn(sprintf("file: %s\n", $arg));
    my $jsonText = get($arg);

    # seen in some JSON output by `mongoexport --jsonArray`.
    $jsonText =~ s{":\+Infinity\b}{":"<<<+Infinity>>>"}g;
    $jsonText =~ s{":\-Infinity\b}{":"<<<-Infinity>>>"}g;

    my $obj = $json->decode($jsonText);
    push(@obj, $obj);
}
warn(sprintf("comparing %d files\n", scalar(@obj)));

compare(\@obj);

sub get {
    my ($filename) = @_;
    my $fh;
    if (!open($fh, '<', $filename)) {
        die("$filename: $!\n");
    }
    local $/ = undef;
    return <$fh>;
}

sub compare {
    my ($objs, $level, $path) = @_;
    my @obj = @$objs;
    $level //= 0;
    $path //= '';

    my %k;
    foreach my $obj (@obj) {
        if ($obj && ref $obj eq 'HASH') {
            foreach my $k (grep { $_ ne 'TOPTEN' } keys %$obj) {
                $k{$k} = 1;
            }
        }
    }

    my @k = keys %k;
    foreach my $k (@k) {
        my @o = map { ($_ && ref $_ eq 'HASH') ? $_->{$k} : undef } @obj;
        my $path2 = $k;
        if ($path ne '') {
            $path2 = "$path -> $k";
        }
        print($path2);
        print("\n");
        compare([@o], $level + 1, $path2);
    }

    my @topten = map { ($_ && ref $_ eq 'HASH') ? $_->{TOPTEN} : undef } @obj;
    if (grep { defined $_ } @topten) {
        my %k2;
        my @hash = map { {} } @obj;
        for (my $i = 0; $i <= $#obj; $i += 1) {
            my $topten = $topten[$i];
            next if !$topten;
            foreach my $keyCount (@$topten) {
                my ($key, $count) = @$keyCount;
                $k2{$key} = 1;
                $hash[$i]{$key} = $count;
            }
        }
        foreach my $key (sort keys %k2) {

            my $column = sprintf('    %-64s', $key);
            $column =~ s{(?:\s{2})+$}{' .' x (length($&)/2)}e;
            print($column);
            for (my $i = 0; $i <= $#obj; $i += 1) {
                if ($topten[$i] && defined $hash[$i]{$key}) {
                    printf("| %6d", $hash[$i]{$key});
                } else {
                    print("|       ");
                }
            }
            print("\n");
        }
    }
}
